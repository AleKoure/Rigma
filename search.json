[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Rigma authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/rigma_intro.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to Figma API","text":"account Figma can accessed using API personal access token. Make access token: Open Figma account log . top-left menu Figma, select Account Settings. Locate section personal access tokens. Select New Token clicking. token created. last opportunity copy token, careful store copy safely. retrieve personal access token save environmental variable (e.g. edit .Renviron typing usethis::edir_r_environ()). saving changes restart R session.","code":"FIGMA_ACCESS_TOKEN=\"YOUR_ACCESS_TOKEN_GOES_HERE!!!\""},{"path":"/articles/rigma_intro.html","id":"example","dir":"Articles","previous_headings":"Getting started","what":"Example","title":"Introduction to Figma API","text":"Open Figma navigate favorite file. URL can see key file. retrieve File R object execute: tree nodes used represent Figma file. Every file DOCUMENT node root, CANVAS nodes branch node. Various POST GET methods provided package interact Figma files teams.","code":"library(Rigma) example_file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_file(example_file_key)"},{"path":"/articles/style_shiny_app_bslib.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using `bslib` variables to stylize shiny","text":"example start adding styles ‘Figma’ file. use variables define high level bslib variables used stylizing Shiny applications.","code":""},{"path":"/articles/style_shiny_app_bslib.html","id":"initial-steps","dir":"Articles","previous_headings":"Introduction","what":"Initial Steps","title":"Using `bslib` variables to stylize shiny","text":"order get style data ‘Figma’ file using REST API following steps followed: Create Figma team Create Figma file move Figma team Add favorite styles (appear Design selection top right screen) Click Assets top left select book icon publish styles.","code":""},{"path":"/articles/style_shiny_app_bslib.html","id":"adding-bootstrap-variables---bslib","dir":"Articles","previous_headings":"Introduction","what":"Adding Bootstrap variables - bslib","title":"Using `bslib` variables to stylize shiny","text":"bslib library allows manipulate theme shiny application using bootstrap variables. example demonstrate use high level bootstrap variables stylize application. high level bootstrap variables arguments functions bslib::bs_theme. using names style names ‘Figma’ file can directly manipulate theme Application. Open ‘Figma’ file insert styles choice using blib variable names printed previous chunk. right hand side screen get View similar following: Figma file bslib variables defining variables want modify navigate top left select Assets. , push book button publish changes file. Now file ready accessed R session using Rigma.","code":"rlang::fn_fmls_names(bslib::bs_theme) %>%   tail(-3) #>  [1] \"bg\"           \"fg\"           \"primary\"      \"secondary\"    \"success\"      #>  [6] \"info\"         \"warning\"      \"danger\"       \"base_font\"    \"code_font\"    #> [11] \"heading_font\" \"font_scale\""},{"path":"/articles/style_shiny_app_bslib.html","id":"extract-data-to-r","dir":"Articles","previous_headings":"Introduction","what":"Extract data to R","title":"Using `bslib` variables to stylize shiny","text":"can access published data via ‘Figma’ REST API. Find file id URL ‘Figma’ file. , collect style data: color encoded thumbnail URLs provided API (alternatively can get color metadata node ids using Rigma::get_file_nodes() method). tutorial, include example function collects color data using thumbnail URLs, add_color(). can get high level bslib color variables executing:","code":"file_key <- \"sFHgQh9dL6369o5wrZHmdR\" #add your own file_key style_data <- file_key %>%   Rigma::get_file_styles() %>%    Rigma::as_design_tibble() bslib_palette <- style_data %>%    Rigma::add_color() %>%    Rigma::extract_bslib_palette()"},{"path":"/articles/style_shiny_app_bslib.html","id":"text-data","dir":"Articles","previous_headings":"Introduction > Extract data to R","what":"Text data","title":"Using `bslib` variables to stylize shiny","text":"Metadata text can extracted using following function:","code":"text_data <- Rigma::text_data_from_styles(style_data)  #get base_font Figma style variable - see also snapshot base_font <- text_data %>%   filter(name == \"base_font\") %>%   pull(fontFamily) %>%   font_google()"},{"path":"/articles/style_shiny_app_bslib.html","id":"creating-bs_theme-object","dir":"Articles","previous_headings":"Introduction > Extract data to R","what":"Creating bs_theme object","title":"Using `bslib` variables to stylize shiny","text":"Collecting font color data can create bs_theme object can used stylize shiny app shiny app read","code":"bslib_vars <- bslib_palette %>%   append(     list(base_font = base_font)   ) rigma_theme <- exec(bs_theme, !!!bslib_vars) library(shiny) ui <- navbarPage(   theme = rigma_theme,   ... ) shinyApp(ui, function(...) {})"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexandros Kouretsis. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kouretsis (2022). Rigma: Access 'Figma' API. R package version 0.2.1, https://github.com/AleKoure/Rigma.","code":"@Manual{,   title = {Rigma: Access to the 'Figma' API},   author = {Alexandros Kouretsis},   year = {2022},   note = {R package version 0.2.1},   url = {https://github.com/AleKoure/Rigma}, }"},{"path":"/index.html","id":"rigma-","dir":"","previous_headings":"","what":"Access to the Figma API","title":"Access to the Figma API","text":"goal Rigma provide user friendly client ‘Figma’ API. uses latest httr2 stable interface ‘Figma’ API. 20 methods provided interact ‘Figma’ files, teams. Get design data R reading published components styles, converting downloading images, getting access full ‘Figma’ file hierarchical data structure, much . Enhance creativity streamline application development automating extraction, transformation, loading design data applications documents.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access to the Figma API","text":"can install development version ‘Rigma’ GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"AleKoure/Rigma\")"},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Access to the Figma API","text":"account can accessed using API owner personal access token just user created token. Make access token. Open Figma account log . top-left menu Figma, select Account Settings. Locate section personal access tokens. Select New Token clicking. token created. last opportunity copy token, careful store copy safely. retrieve personal access token save environmental variable (e.g. edit .Renviron typing usethis::edir_r_environ()). saving changes restart R session.","code":"FIGMA_ACCESS_TOKEN=\"YOUR_ACCESS_TOKEN_GOES_HERE!!!\""},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Access to the Figma API","text":"Open ‘Figma’ navigate favorite file. URL can see key file. retrieve File R object execute: tree nodes used represent ‘Figma’ file. Every file DOCUMENT node root, CANVAS nodes branch node.","code":"example_file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_file(example_file_key)"},{"path":"/reference/add_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Add color to design table data — add_color","title":"Add color to design table data — add_color","text":"Extracts color design data collected Figma API. Can convert hex. Infered color data added new column named `color`.","code":""},{"path":"/reference/add_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add color to design table data — add_color","text":"","code":"add_color(design_tibble, hex = TRUE)"},{"path":"/reference/add_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add color to design table data — add_color","text":"design_tibble Tabular data augmented color colomn. hex logical. `TRUE` hex data added `color` column else nested data `RGBA` channels.","code":""},{"path":"/reference/add_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add color to design table data — add_color","text":"Adds color column `design_tibble` data","code":""},{"path":"/reference/add_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add color to design table data — add_color","text":"","code":"if (FALSE) { file_key <- \"sFHgQh9dL6369o5wrZHmdR\" resp <- get_file_styles(file_key) %>%   as_design_tibble() %>%   add_color() }"},{"path":"/reference/as_design_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data to tabular format — as_design_tibble","title":"Transform data to tabular format — as_design_tibble","text":"Transforms data returned Figma API request tabular format.","code":""},{"path":"/reference/as_design_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data to tabular format — as_design_tibble","text":"","code":"as_design_tibble(rigma_resp, message = TRUE)"},{"path":"/reference/as_design_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data to tabular format — as_design_tibble","text":"rigma_resp response object Figma API. message logical. Control printing messages.","code":""},{"path":"/reference/as_design_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform data to tabular format — as_design_tibble","text":"tibble data extracted Figma response objects. Subclasses type `design_tibble` added resulting tibbles.","code":""},{"path":"/reference/as_design_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform data to tabular format — as_design_tibble","text":"","code":"if (FALSE) { file_key <- \"sFHgQh9dL6369o5wrZHmdR\" resp <- get_file_styles(file_key = file_key) as_design_tibble(resp) }"},{"path":"/reference/delete_comment.html","id":null,"dir":"Reference","previous_headings":"","what":"DELETE comments — delete_comment","title":"DELETE comments — delete_comment","text":"Deletes specific comment. person made comment allowed delete .","code":""},{"path":"/reference/delete_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DELETE comments — delete_comment","text":"","code":"delete_comment(file_key, comment_id)"},{"path":"/reference/delete_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DELETE comments — delete_comment","text":"file_key string. key Figma file referred . comment_id string. comment id.","code":""},{"path":"/reference/delete_comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DELETE comments — delete_comment","text":"S3 object class `rigma_delete_comment`. Contains parsed JSON response fields `error`, `status`, `i18n`.","code":""},{"path":"/reference/delete_comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DELETE comments — delete_comment","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" first_comment_id <- get_comments(file_key)$comments[[1]]$id delete_comment(file_key, first_comment_id) } }"},{"path":"/reference/delete_comment_reactions.html","id":null,"dir":"Reference","previous_headings":"","what":"DELETE comment reactions — delete_comment_reactions","title":"DELETE comment reactions — delete_comment_reactions","text":"Removes particular comment reaction. person ability delete comment reaction original poster.","code":""},{"path":"/reference/delete_comment_reactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DELETE comment reactions — delete_comment_reactions","text":"","code":"delete_comment_reactions(file_key, comment_id, emoji)"},{"path":"/reference/delete_comment_reactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DELETE comment reactions — delete_comment_reactions","text":"file_key string. key Figma file referred . comment_id string. Comment id comment delete reaction . emoji string. emoji type reaction delete string enum :eyes:, :heart_eyes:, :heavy_plus_sign:, :+1:, :-1:, :joy: :fire:","code":""},{"path":"/reference/delete_comment_reactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DELETE comment reactions — delete_comment_reactions","text":"S3 object class `rigma_delete_comment_reactions`. Contains parsed JSON response fields `error`, `status`, `i18n`.","code":""},{"path":"/reference/delete_comment_reactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DELETE comment reactions — delete_comment_reactions","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" first_comment_id <- get_comments(file_key)$comments[[1]]$id delete_comment_reactions(file_key, first_comment_id, \":eyes:\") } }"},{"path":"/reference/extract_bslib_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract bslib palette — extract_bslib_palette","title":"Extract bslib palette — extract_bslib_palette","text":"Extract bslib palette","code":""},{"path":"/reference/extract_bslib_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract bslib palette — extract_bslib_palette","text":"","code":"extract_bslib_palette(design_tibble, version = 5)"},{"path":"/reference/extract_bslib_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract bslib palette — extract_bslib_palette","text":"design_tibble design_tibble returned bu `add_color()` function version Bootstrap version use extracting color variables","code":""},{"path":"/reference/extract_bslib_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract bslib palette — extract_bslib_palette","text":"List colors used high level variables `bs_theme()`.","code":""},{"path":"/reference/extract_bslib_palette.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract bslib palette — extract_bslib_palette","text":"function filters bslib high level color variables published styles Figma file /team. color extracted added variable retrieved data.","code":""},{"path":"/reference/extract_bslib_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract bslib palette — extract_bslib_palette","text":"","code":"if (FALSE) { file_key <- \"sFHgQh9dL6369o5wrZHmdR\" file_key %>%   get_file_styles() %>%   as_design_tibble() %>%   add_color() %>%   extract_bslib_palette() }"},{"path":"/reference/get_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"GET comments — get_comments","title":"GET comments — get_comments","text":"Gets list comments left file.","code":""},{"path":"/reference/get_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET comments — get_comments","text":"","code":"get_comments(file_key)"},{"path":"/reference/get_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET comments — get_comments","text":"file_key string. key Figma file referred .","code":""},{"path":"/reference/get_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET comments — get_comments","text":"S3 object class `rigma_get_comments`. Contains parsed JSON response.","code":""},{"path":"/reference/get_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET comments — get_comments","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_comments(file_key) } }"},{"path":"/reference/get_comments_reactions.html","id":null,"dir":"Reference","previous_headings":"","what":"GET comments reactions — get_comments_reactions","title":"GET comments reactions — get_comments_reactions","text":"Obtains paginated list comments' reactions.","code":""},{"path":"/reference/get_comments_reactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET comments reactions — get_comments_reactions","text":"","code":"get_comments_reactions(file_key, comment_id, cursor = NULL)"},{"path":"/reference/get_comments_reactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET comments reactions — get_comments_reactions","text":"file_key string. key Figma file referred . comment_id string. comment id. cursor string obtained result previous request, cursor pagination.","code":""},{"path":"/reference/get_comments_reactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET comments reactions — get_comments_reactions","text":"S3 object class `rigma_get_comments_reactions`. Contains parsed JSON response fields `reactions`, `pagination`.","code":""},{"path":"/reference/get_comments_reactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET comments reactions — get_comments_reactions","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" resp <- get_comments(file_key) resp_reactions <- get_comments_reactions(file_key, resp$comments[[1]]$id) } }"},{"path":"/reference/get_component.html","id":null,"dir":"Reference","previous_headings":"","what":"GET component — get_component","title":"GET component — get_component","text":"Get metadata component key. publish components join Figma team subscribe professional account.","code":""},{"path":"/reference/get_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET component — get_component","text":"","code":"get_component(key)"},{"path":"/reference/get_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET component — get_component","text":"key string. unique identifier component.","code":""},{"path":"/reference/get_component.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET component — get_component","text":"S3 object class `rigma_get_component`.","code":""},{"path":"/reference/get_component.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET component — get_component","text":"","code":"if (FALSE) { component_key <- \"my_key\" get_component(component_key) }"},{"path":"/reference/get_component_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"GET component set — get_component_sets","title":"GET component set — get_component_sets","text":"Get metadata component_set key. publish components join Figma team subscribe professional account.","code":""},{"path":"/reference/get_component_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET component set — get_component_sets","text":"","code":"get_component_sets(key)"},{"path":"/reference/get_component_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET component set — get_component_sets","text":"key string. unique identifier component.","code":""},{"path":"/reference/get_component_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET component set — get_component_sets","text":"S3 object class `rigma_get_component_set`.","code":""},{"path":"/reference/get_component_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET component set — get_component_sets","text":"","code":"if (FALSE) { component_key <- \"my_key\" get_component_sets(component_key) }"},{"path":"/reference/get_file.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file — get_file","title":"GET file — get_file","text":"Direct access desired  file made available using GET file API endpoint. returns JSON object representing file pointed :key. Figma file url, https://www.figma.com/file/:key/:title, can used parse file key.","code":""},{"path":"/reference/get_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file — get_file","text":"","code":"get_file(   file_key,   version = NULL,   ids = NULL,   depth = NULL,   geometry = NULL,   plugin_data = NULL,   branch_data = NULL )"},{"path":"/reference/get_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file — get_file","text":"file_key string. key Figma file referred . version string. certain version ID obtain. omitting , obtain file's recent version. ids string. list document's nodes important , separated commas. supplied, nodes listed, children, everything root node listed nodes returned part document. depth integer. positive number indicating depth traversal across document tree. instance, changing 2 returns Pages top level objects page instead just returning Pages. nodes returned argument set. geometry string. export vector data, set equal \"paths\". plugin_data string. list plugin IDs separated commas word \"shared.\" result's 'pluginData' 'sharedPluginData' attributes contain data existing document created plugins. branch_data boolean. requested file's branch metadata returned. file branch, returned response also provide key main file. file branches, response also contain metadata branches. Standard: false.","code":""},{"path":"/reference/get_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file — get_file","text":"S3 object class `figma_file_resp`. Contains parsed content, path, API response compatible `httr2` methods. retrieved file's metadata includes `name`, `lastModified`, `thumbnailUrl`, `editorType`, `linkAccess`, `version attributes`. Node DOCUMENT type present document attribute.","code":""},{"path":"/reference/get_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file — get_file","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_file(file_key) } }"},{"path":"/reference/get_file_component_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file component sets — get_file_component_sets","title":"GET file component sets — get_file_component_sets","text":"Get list published component_sets within file library. Note published components available via professional plan.","code":""},{"path":"/reference/get_file_component_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file component sets — get_file_component_sets","text":"","code":"get_file_component_sets(file_key)"},{"path":"/reference/get_file_component_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file component sets — get_file_component_sets","text":"file_key string. Id team list components .","code":""},{"path":"/reference/get_file_component_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file component sets — get_file_component_sets","text":"S3 object class `rigma_get_file_component_sets`. Components stored `meta` field.","code":""},{"path":"/reference/get_file_component_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file component sets — get_file_component_sets","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url file_key <- \"gYRjH0y8ZM0VtEfO8kf6ch\" get_file_component_sets(file_key) } }"},{"path":"/reference/get_file_components.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file components — get_file_components","title":"GET file components — get_file_components","text":"Get list published components within file library. Note published components available via professional plan.","code":""},{"path":"/reference/get_file_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file components — get_file_components","text":"","code":"get_file_components(file_key)"},{"path":"/reference/get_file_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file components — get_file_components","text":"file_key string. key Figma file referred .","code":""},{"path":"/reference/get_file_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file components — get_file_components","text":"S3 object class `rigma_get_file_components`. Components stored `meta` field.","code":""},{"path":"/reference/get_file_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file components — get_file_components","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url file_key <- \"gYRjH0y8ZM0VtEfO8kf6ch\" get_file_components(file_key) } }"},{"path":"/reference/get_file_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file nodes — get_file_nodes","title":"GET file nodes — get_file_nodes","text":"Returns JSON object containing nodes referenced `:ids`. Figma file referred `:key` nodes located. node Id file key can parsed Figma node url: https://www.figma.com/file/:key/:title?node-id=:id.","code":""},{"path":"/reference/get_file_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file nodes — get_file_nodes","text":"","code":"get_file_nodes(   file_key,   ids = NULL,   version = NULL,   depth = NULL,   geometry = NULL,   plugin_data = NULL )"},{"path":"/reference/get_file_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file nodes — get_file_nodes","text":"file_key string. key Figma file referred . ids character. Vector document's node ids important . supplied, nodes listed, children, everything root node listed nodes returned part document. version string. certain version ID obtain. omitting , obtain file's recent version. depth integer. positive number indicating depth traversal across document tree. instance, changing 2 returns Pages top level objects page instead just returning Pages. nodes returned argument set. geometry string. export vector data, set equal \"paths\". plugin_data string. list plugin IDs separated commas word \"shared.\" result's 'pluginData' 'sharedPluginData' attributes contain data existing document created plugins.","code":""},{"path":"/reference/get_file_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file nodes — get_file_nodes","text":"S3 object type `rigma_get_file_nodes`. supplied file's metadata includes `name`, `lastModified`, `thumbnailUrl`, `editorType`, `version` attributes. file link share permission level described `linkAccess` field. shared link may one five different permissions: \"inherit,\" \"view,\" \"edit,\" \"org view,\" \"org edit.\" default permission files produced team project \"inherit,\" files take project's rights default. \"org view\" \"org edit\" allow org users access link. node ability inherit properties applicable styles. mapping style IDs style metadata contained `styles` key. important note nodes field list can include null values. can provided file contain node specified id.","code":""},{"path":"/reference/get_file_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file nodes — get_file_nodes","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_file_nodes(file_key, ids = \"0:0\") } }"},{"path":"/reference/get_file_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file styles — get_file_styles","title":"GET file styles — get_file_styles","text":"Get published styles file library name.","code":""},{"path":"/reference/get_file_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file styles — get_file_styles","text":"","code":"get_file_styles(file_key)"},{"path":"/reference/get_file_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file styles — get_file_styles","text":"file_key string. key Figma file referred .","code":""},{"path":"/reference/get_file_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file styles — get_file_styles","text":"S3 object class `rigma_get_file_styles`. Styles stored `meta` field.","code":""},{"path":"/reference/get_file_styles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file styles — get_file_styles","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url file_key <- \"gYRjH0y8ZM0VtEfO8kf6ch\" get_file_styles(file_key) } }"},{"path":"/reference/get_file_versions.html","id":null,"dir":"Reference","previous_headings":"","what":"GET file versions — get_file_versions","title":"GET file versions — get_file_versions","text":"list versions file.","code":""},{"path":"/reference/get_file_versions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET file versions — get_file_versions","text":"","code":"get_file_versions(file_key)"},{"path":"/reference/get_file_versions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET file versions — get_file_versions","text":"file_key string. key Figma file referred .","code":""},{"path":"/reference/get_file_versions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET file versions — get_file_versions","text":"S3 object class `rigma_get_file_versions`. Contains parsed JSON response fields `versions`, `pagination`.","code":""},{"path":"/reference/get_file_versions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET file versions — get_file_versions","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_file_versions(file_key) } }"},{"path":"/reference/get_image.html","id":null,"dir":"Reference","previous_headings":"","what":"GET image — get_image","title":"GET image — get_image","text":"errors, \"images\" filled list node IDs corresponding URLs displayed images, \"status\" left empty. 30 days, picture assets stop working. important note picture map include null values. suggests node's attempt render failed. lack node id factors, absence renderable components, may responsible. Whether render successful, assured node requested rendering represented map.","code":""},{"path":"/reference/get_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET image — get_image","text":"","code":"get_image(   file_key,   ids,   scale = NULL,   format = NULL,   svg_include_id = NULL,   svg_simplify_stroke = NULL,   use_absolute_bounds = NULL,   version = NULL )"},{"path":"/reference/get_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET image — get_image","text":"file_key string. key Figma file referred . ids string. comma separated list node IDs render scale numeric. image scaling factor number 0.01 4 format string. string enum image output format, can \"jpg\", \"png\", \"svg\", \"pdf\" svg_include_id logical. Whether give SVG element id attribute. Standard: `FALSE` svg_simplify_stroke logical. Whether simplify inside/outside strokes use stroke attribute possible instead <mask>. Default:  `TRUE`. use_absolute_bounds logical. Whether node cropped area around vacant, use node's full dimensions. export text nodes without cropping, use method. Standard: false. version string. specific version ID use. Omitting use current version file","code":""},{"path":"/reference/get_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET image — get_image","text":"S3 object class `rigma_get_image`. Contains parsed JSON response fields `err`, `images`.","code":""},{"path":"/reference/get_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET image — get_image","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_image(file_key, ids = \"0:1\", format = \"svg\") } }"},{"path":"/reference/get_image_fills.html","id":null,"dir":"Reference","previous_headings":"","what":"GET image fills — get_image_fills","title":"GET image fills — get_image_fills","text":"API endpoint provides download URLs images present document's image fills. Figma represents user-supplied images using image fills. drag picture Figma, builds rectangle single fill represent . user can modify attributes fill change rectangle see fit.","code":""},{"path":"/reference/get_image_fills.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET image fills — get_image_fills","text":"","code":"get_image_fills(file_key)"},{"path":"/reference/get_image_fills.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET image fills — get_image_fills","text":"file_key string. key Figma file referred .","code":""},{"path":"/reference/get_image_fills.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET image fills — get_image_fills","text":"API provides mapping image references download URLs images. Image URLs 14-day maximum lifespan. Image references located output GET files endpoint `imageRef` attribute Paint.","code":""},{"path":"/reference/get_image_fills.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET image fills — get_image_fills","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_image_fills(file_key) } }"},{"path":"/reference/get_project_files.html","id":null,"dir":"Reference","previous_headings":"","what":"GET project files — get_project_files","title":"GET project files — get_project_files","text":"List files given project.","code":""},{"path":"/reference/get_project_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET project files — get_project_files","text":"","code":"get_project_files(project_id, branch_data = \"false\")"},{"path":"/reference/get_project_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET project files — get_project_files","text":"project_id string. Id project list files . branch_data string. Returns branch metadata response main file branch inside project. Default: \"false\"","code":""},{"path":"/reference/get_project_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET project files — get_project_files","text":"S3 object class `rigma_get_project_files`. Contains parsed JSON response fields `name`, `files`.","code":""},{"path":"/reference/get_project_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET project files — get_project_files","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url project_id <- \"71686204\" get_project_files(project_id) } }"},{"path":"/reference/get_team_component_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"GET team component sets — get_team_component_sets","title":"GET team component sets — get_team_component_sets","text":"Get paginated list published `component_sets` within team library. Note published components available via professional plan.","code":""},{"path":"/reference/get_team_component_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET team component sets — get_team_component_sets","text":"","code":"get_team_component_sets(team_id, page_size = 30, after = NULL, before = NULL)"},{"path":"/reference/get_team_component_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET team component sets — get_team_component_sets","text":"team_id string. team's ID, list components. page_size number Number items paged list results. Defaults 30. number. Cursor providing id begin component retrieval. Exclusive `` parameter. cursor value tracked integer kept internally Ids. number. id begin obtaining components shown cursor. Exclusive cursor value tracked integer kept internally Ids.","code":""},{"path":"/reference/get_team_component_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET team component sets — get_team_component_sets","text":"S3 object class `rigma_get_team_component_sets`. Components stored `meta` field.","code":""},{"path":"/reference/get_team_component_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET team component sets — get_team_component_sets","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url get_team_component_sets(team_id = \"1168610438838663284\") } }"},{"path":"/reference/get_team_components.html","id":null,"dir":"Reference","previous_headings":"","what":"GET team components — get_team_components","title":"GET team components — get_team_components","text":"Get paginated list published components within team library. Note team components available via professional plan.","code":""},{"path":"/reference/get_team_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET team components — get_team_components","text":"","code":"get_team_components(team_id, page_size = 30, after = NULL, before = NULL)"},{"path":"/reference/get_team_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET team components — get_team_components","text":"team_id string. team's ID, list components. page_size number Number items paged list results. Defaults 30. number. Cursor providing id begin component retrieval. Exclusive `` parameter. cursor value tracked integer kept internally Ids. number. id begin obtaining components shown cursor. Exclusive cursor value tracked integer kept internally Ids.","code":""},{"path":"/reference/get_team_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET team components — get_team_components","text":"S3 object class `rigma_get_team_components`. Components stored `meta` field.","code":""},{"path":"/reference/get_team_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET team components — get_team_components","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url get_team_components(team_id = \"1168610438838663284\") } }"},{"path":"/reference/get_team_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"GET team projects — get_team_projects","title":"GET team projects — get_team_projects","text":"Get list Projects inside specified team using Endpoint. projects visible authorized user holder developer token returned. noted user's team ID yet determined token. Go team page team part get team ID. term \"team\" team name, team id appear URL.","code":""},{"path":"/reference/get_team_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET team projects — get_team_projects","text":"","code":"get_team_projects(team_id)"},{"path":"/reference/get_team_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET team projects — get_team_projects","text":"team_id string. Id team list projects .","code":""},{"path":"/reference/get_team_projects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET team projects — get_team_projects","text":"S3 object class `rigma_get_team_projects`. Contains parsed JSON response fields `name`, `projects`.","code":""},{"path":"/reference/get_team_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET team projects — get_team_projects","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url team_id <- \"1168610438838663284\" get_team_projects(team_id) } }"},{"path":"/reference/get_team_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"GET team styles — get_team_styles","title":"GET team styles — get_team_styles","text":"Get list published styles team library paginated.","code":""},{"path":"/reference/get_team_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GET team styles — get_team_styles","text":"","code":"get_team_styles(team_id, page_size = 30, after = NULL, before = NULL)"},{"path":"/reference/get_team_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GET team styles — get_team_styles","text":"team_id string. team's ID, list styles. page_size number. Number items paged list results. Defaults 30. number. Cursor providing id begin component retrieval. Exclusive `` parameter. cursor value tracked integer kept internally Ids. number. id begin obtaining components shown cursor. Exclusive cursor value tracked integer kept internally Ids.","code":""},{"path":"/reference/get_team_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GET team styles — get_team_styles","text":"S3 object class `rigma_get_team_styles`. Styles stored `meta` field.","code":""},{"path":"/reference/get_team_styles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GET team styles — get_team_styles","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to team page and get id from url get_team_styles(team_id = \"1168610438838663284\") } }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/possibly_thumbnail_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Possibly extract thumbnail color — possibly_thumbnail_color","title":"Possibly extract thumbnail color — possibly_thumbnail_color","text":"Possibly extract thumbnail color","code":""},{"path":"/reference/possibly_thumbnail_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Possibly extract thumbnail color — possibly_thumbnail_color","text":"","code":"possibly_thumbnail_color(...)"},{"path":"/reference/possibly_thumbnail_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Possibly extract thumbnail color — possibly_thumbnail_color","text":"... Variables passed wrapped function","code":""},{"path":"/reference/possibly_thumbnail_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Possibly extract thumbnail color — possibly_thumbnail_color","text":"thumbnail_color function handles errors","code":""},{"path":"/reference/post_comment.html","id":null,"dir":"Reference","previous_headings":"","what":"POST comment — post_comment","title":"POST comment — post_comment","text":"Posts new comment file.","code":""},{"path":"/reference/post_comment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"POST comment — post_comment","text":"","code":"post_comment(file_key, message, comment_id = NULL, client_meta)"},{"path":"/reference/post_comment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"POST comment — post_comment","text":"file_key string. key Figma file referred . message string. comment's textual content post. comment_id string. one, comment respond . reply remark reply (reply parent id), thus must root comment. client_meta string. position place comment.","code":""},{"path":"/reference/post_comment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"POST comment — post_comment","text":"S3 object class `rigma_post_comment`. Contains parsed JSON response fields `id`, `file_key`, `status`, `i18n`, `parent_id`, `user`, `created_at`, `resolved_at`, `message`, `reactions`, `client_meta`, `order_id`.","code":""},{"path":"/reference/post_comment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"POST comment — post_comment","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" get_comments(file_key) } }"},{"path":"/reference/post_comment_reactions.html","id":null,"dir":"Reference","previous_headings":"","what":"POST comment reactions — post_comment_reactions","title":"POST comment reactions — post_comment_reactions","text":"Posts new comment reaction file comment.","code":""},{"path":"/reference/post_comment_reactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"POST comment reactions — post_comment_reactions","text":"","code":"post_comment_reactions(file_key, comment_id, emoji)"},{"path":"/reference/post_comment_reactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"POST comment reactions — post_comment_reactions","text":"file_key string. key Figma file referred . comment_id string. one, comment respond . reply remark reply (reply parent id), thus must root comment. emoji string. emoji type reaction string enum :eyes:, :heart_eyes:, :heavy_plus_sign:, :+1:, :-1:, :joy: :fire:","code":""},{"path":"/reference/post_comment_reactions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"POST comment reactions — post_comment_reactions","text":"S3 object class `rigma_post_comment_reactions`. Contains parsed JSON response fields `error`, `status`, `i18n`.","code":""},{"path":"/reference/post_comment_reactions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"POST comment reactions — post_comment_reactions","text":"","code":"if (FALSE) { # Sys.getenv(\"FIGMA_ACCESS_TOKEN\") != \"\" if (FALSE) { #navigate to  file and get key from url file_key <- \"sFHgQh9dL6369o5wrZHmdR\" first_comment_id <- get_comments(file_key)$comments[[1]]$id post_comment_reactions(file_key, first_comment_id, \":eyes:\") } }"},{"path":"/reference/req_rigma_agent.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata to Rigma request — req_rigma_agent","title":"Add metadata to Rigma request — req_rigma_agent","text":"Extra metadata attached httr2 request object performing request.","code":""},{"path":"/reference/req_rigma_agent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata to Rigma request — req_rigma_agent","text":"","code":"req_rigma_agent(req, user_agent = \"Rigma https://github.com/AleKoure/Rigma\")"},{"path":"/reference/req_rigma_agent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata to Rigma request — req_rigma_agent","text":"req httr2_request object user_agent string user agent","code":""},{"path":"/reference/req_rigma_agent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata to Rigma request — req_rigma_agent","text":"httr2_request object Figma token heater, user agent retry specifications.","code":""},{"path":"/reference/safe_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe download files — safe_download","title":"Safe download files — safe_download","text":"Safe download files","code":""},{"path":"/reference/safe_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe download files — safe_download","text":"","code":"safe_download(...)"},{"path":"/reference/safe_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe download files — safe_download","text":"... Variables passed wrapped function","code":""},{"path":"/reference/safe_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Safe download files — safe_download","text":"download function safely handles errors","code":""},{"path":"/reference/text_data_from_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get text data from styles — text_data_from_styles","title":"Get text data from styles — text_data_from_styles","text":"Get text data styles","code":""},{"path":"/reference/text_data_from_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get text data from styles — text_data_from_styles","text":"","code":"text_data_from_styles(design_tibble)"},{"path":"/reference/text_data_from_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get text data from styles — text_data_from_styles","text":"design_tibble S3 object class `design_tibble_style` returned queering 'Figma' API published styles. design tibble contain unique `file_key` (map `file_key` one exist.)","code":""},{"path":"/reference/text_data_from_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get text data from styles — text_data_from_styles","text":"tibble text metadata exported TEXT styles","code":""},{"path":"/reference/text_data_from_styles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get text data from styles — text_data_from_styles","text":"Given design_tibble exported styles function retrieves TEXT style type metadata. uses GET file nodes API endpoint collects style data.","code":""},{"path":"/reference/text_data_from_styles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get text data from styles — text_data_from_styles","text":"","code":"if (FALSE) { file_key <- \"sFHgQh9dL6369o5wrZHmdR\" file_key %>%  get_file_styles() %>%  as_design_tibble() %>%  text_data_from_styles() }"},{"path":"/reference/thumbnail_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Find thumbnail color — thumbnail_color","title":"Find thumbnail color — thumbnail_color","text":"Find thumbnail color","code":""},{"path":"/reference/thumbnail_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find thumbnail color — thumbnail_color","text":"","code":"thumbnail_color(path, hex = TRUE)"},{"path":"/reference/thumbnail_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find thumbnail color — thumbnail_color","text":"path string. Path thumbnail PNG hex logical. `TRUE` RGBA values converted hex","code":""},{"path":"/reference/thumbnail_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find thumbnail color — thumbnail_color","text":"color thumbnail hex rgba","code":""},{"path":"/reference/thumbnail_color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find thumbnail color — thumbnail_color","text":"Given mono-colored thumbnail function extracts RGBA channels returns vector scaled [0, 1] hex color code.","code":""},{"path":"/reference/thumbnail_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find thumbnail color — thumbnail_color","text":"","code":"path <- system.file(\"extdata\", \"test_thumbnail.png\", package = \"Rigma\") thumbnail_color(path) #> [1] \"#343A40FF\""},{"path":[]},{"path":"/news/index.html","id":"new-methods-0-2-1","dir":"Changelog","previous_headings":"","what":"New methods","title":"Rigma 0.2.1","text":"add_color() adds color column design_tibble as_design_tibble() Generic converts Figma API responses tabular format. extract_bslib_palette() Example function extract bslib high level color variables. text_data_from_style Collects metadata published text styles. thumbnail_color() Extracts color monochromatic PNG thumbnail.","code":""},{"path":"/news/index.html","id":"new-vignette-0-2-1","dir":"Changelog","previous_headings":"","what":"New vignette","title":"Rigma 0.2.1","text":"Added example stylize shiny apps using bslib variables published ‘Figma’ styles.","code":""},{"path":"/news/index.html","id":"rigma-010","dir":"Changelog","previous_headings":"","what":"Rigma 0.1.0","title":"Rigma 0.1.0","text":"CRAN release: 2022-11-09 Initial beta release!","code":""}]
